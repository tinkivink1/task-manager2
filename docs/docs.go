// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/login": {
            "post": {
                "description": "Handling login using given login and password",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Handling login",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/apiserver.TokenResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/apiserver.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/apiserver.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/apiserver.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/register": {
            "post": {
                "description": "Handling user registration using given username and password",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Handling user registration",
                "responses": {
                    "200": {
                        "description": "Successful response with an access token",
                        "schema": {
                            "$ref": "#/definitions/apiserver.TokenResponse"
                        }
                    },
                    "400": {
                        "description": "Error response with details",
                        "schema": {
                            "$ref": "#/definitions/apiserver.ErrorResponse"
                        }
                    },
                    "409": {
                        "description": "Error response with details",
                        "schema": {
                            "$ref": "#/definitions/apiserver.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Error response with details",
                        "schema": {
                            "$ref": "#/definitions/apiserver.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/tasks": {
            "get": {
                "description": "Handling the request to fetch tasks for the authenticated user",
                "produces": [
                    "application/json"
                ],
                "summary": "Handling fetching tasks",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "User ID",
                        "name": "userID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of tasks",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Task"
                            }
                        }
                    },
                    "400": {
                        "description": "Error response with details",
                        "schema": {
                            "$ref": "#/definitions/apiserver.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Error response with details",
                        "schema": {
                            "$ref": "#/definitions/apiserver.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Error response with details",
                        "schema": {
                            "$ref": "#/definitions/apiserver.ErrorResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "Handling the request to create a task for the authenticated user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Handling task creation",
                "parameters": [
                    {
                        "description": "Task data",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Task"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Created task",
                        "schema": {
                            "$ref": "#/definitions/models.Task"
                        }
                    },
                    "400": {
                        "description": "Error response with details",
                        "schema": {
                            "$ref": "#/definitions/apiserver.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Error response with details",
                        "schema": {
                            "$ref": "#/definitions/apiserver.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Error response with details",
                        "schema": {
                            "$ref": "#/definitions/apiserver.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/tasks/{userID}/{taskID}": {
            "get": {
                "description": "Handling the request to fetch a specific task for the authenticated user",
                "produces": [
                    "application/json"
                ],
                "summary": "Handling fetching a task",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "User ID",
                        "name": "userID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Task ID",
                        "name": "taskID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Fetched task",
                        "schema": {
                            "$ref": "#/definitions/models.Task"
                        }
                    },
                    "400": {
                        "description": "Error response with details",
                        "schema": {
                            "$ref": "#/definitions/apiserver.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Error response with details",
                        "schema": {
                            "$ref": "#/definitions/apiserver.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Error response with details",
                        "schema": {
                            "$ref": "#/definitions/apiserver.ErrorResponse"
                        }
                    }
                }
            },
            "put": {
                "description": "Handling the request to update a specific task for the authenticated user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Handling updating a task",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "User ID",
                        "name": "userID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Task ID",
                        "name": "taskID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Updated task data",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Task"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Task updated successfully",
                        "schema": {
                            "$ref": "#/definitions/apiserver.StatusResponse"
                        }
                    },
                    "400": {
                        "description": "Error response with details",
                        "schema": {
                            "$ref": "#/definitions/apiserver.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Error response with details",
                        "schema": {
                            "$ref": "#/definitions/apiserver.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Error response with details",
                        "schema": {
                            "$ref": "#/definitions/apiserver.ErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "description": "Handling the request to delete a specific task for the authenticated user",
                "produces": [
                    "application/json"
                ],
                "summary": "Handling deleting a task",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "User ID",
                        "name": "userID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Task ID",
                        "name": "taskID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Task deleted successfully",
                        "schema": {
                            "$ref": "#/definitions/apiserver.ErrorResponse"
                        }
                    },
                    "400": {
                        "description": "Error response with details",
                        "schema": {
                            "$ref": "#/definitions/apiserver.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Error response with details",
                        "schema": {
                            "$ref": "#/definitions/apiserver.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Error response with details",
                        "schema": {
                            "$ref": "#/definitions/apiserver.ErrorResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "apiserver.ErrorResponse": {
            "description": "API response with an error message.",
            "type": "object",
            "properties": {
                "error": {
                    "type": "string"
                }
            }
        },
        "apiserver.StatusResponse": {
            "description": "Successful API response with a message.",
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                }
            }
        },
        "apiserver.TokenResponse": {
            "description": "API response with an access token.",
            "type": "object",
            "properties": {
                "token": {
                    "type": "string"
                }
            }
        },
        "models.Task": {
            "description": "Task details with ID, title, description, creation time, management time, and associated user ID.",
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "scheduled_for": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                },
                "user_id": {
                    "type": "integer"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "",
	Host:             "",
	BasePath:         "",
	Schemes:          []string{},
	Title:            "",
	Description:      "",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
